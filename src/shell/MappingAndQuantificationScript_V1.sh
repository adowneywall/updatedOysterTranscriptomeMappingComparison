#!/bin/bash

## Software Versions
# STAR: STAR_2.5.3a
# RSEM: 

## Sample list
lst=(17005)

# Raw sequence file directory
raw="/shared_lab/20180226_RNAseq_2017OAExp/RNA/rawfiles"
# Reference genome file (.fna or fasta file)
genome="/shared_lab/20180226_RNAseq_2017OAExp/RNA/references/genome/haplotig_masked_genome.fasta"
# Annotation file (.gtf)
annotation="/shared_lab/20180226_RNAseq_2017OAExp/RNA/references/gene_annotation/KM_CV_genome_edit_Gnomon.gtf"
# Output folder
output="/shared_lab/20180226_RNAseq_2017OAExp/RNA/STARTest"

# Check if output folder already exists to prevent rewriting data
if [ -d "$output" ]; then
        echo "Directory Already Exists, please rerun with unique output directory"
        exit 1
else
        echo "Directory Created"
        mkdir "$base$output"
fi

### Create basic file structure
refs="$output/refs"
s_out="$output/STAR"
s_out_m2=$s_out"/m2"
s_out_m3=$s_out"/m3"
r_out="$output/RSEM"
mkdir $refs
mkdir $s_out
mkdir $s_out_m2
mkdir $s_out_m3
mkdir $r_out


#### Create STAR ref ##############################################
echo "Creating genome reference for STAR mapping...."
# Don't currently use this reference (I have been using the one from RSEM,
# which should be just about identitical)

# Create folder for STAR reference genome
star_ref=$refs"/STAR_ref"
mkdir $star_ref  

# Run function
Run function
STAR \
--runThreadN 20 \
--runMode genomeGenerate \
--genomeDir $star_ref \
--genomeFastaFiles $genome \
--sjdbGTFfile $annotation


#### RSEM from STAR ref ###########################################
echo "Creating genome reference for RSEM quantification...."

# Create folder for STAR reference genome
rsem_ref=$refs"/RSEM_ref"
mkdir $rsem_ref

# Run function
rsem-prepare-reference \
--gtf $annotation \
--star -p 20 \
$genome \
$rsem_ref"/RSEM"

#### STAR Mapping - first pass ####################################
echo "Starting STAR Mapping - first pass...."

# This will loop through each sample in the raw folder directory
for i in ${lst[*]};do
    echo "Star first pass .. processing sample:"$i
    outPath=$s_out_m2"/"$i

    file1=$(ls $raw/*${i}.R1.*)
    file2=$(ls $raw/*${i}.R2.*)

    # Diagnostic lines to check paths
    echo $rsem_ref
    echo $outPath

## Custom Settings
# --outFilterMatchNminOverLread : 
# --outFilterScoreMinOverLread : 

    /shared_lab/scripts/STAR \
    --runThreadN 20 \
    --genomeDir $rsem_ref \
    --readFilesIn $file1 $file2 \
    --outFilterMatchNminOverLread 0.17 \
    --outFilterScoreMinOverLread 0.17 \
    --outSAMmapqUnique 40 \
    --outSAMtype BAM Unsorted SortedByCoordinate \
    --outFileNamePrefix $outPath \
    --readFilesCommand zcat #Used to read in compressed .gz files
done

### STAR - second pass ############################################
echo "Starting STAR Mapping - second pass...."
m2_files=$(ls $s_out_m2/*SJ.out.tab)
for i in ${lst[*]};do
    outPath=$s_out_m3"/"$i

    file1=$(ls $raw/*${i}.R1.*)
    file2=$(ls $raw/*${i}.R2.*)

    echo "Star second pass .. processing sample: "$i

    # Diagnositic echo
    echo $outPath
    echo $m2_files

## Custom setting
# --outSAMmapqUnique (default 255) - manually sets the MapQ value for unique mappers.
# --limitSjdbInsertNsj (default 1000000) - max number of splice junctions to be included on the fly.
#                                          This value was increased to prevent an error.
# --quantMode : 
#               TranscriptomeSAM - outputs Alignments translated into transcript coordinates
#                                  this is REQUIRED by RSEM.
#               GeneCounts - outputs a file of read counts per gene. This should correspond 
#                            to outputs generated by HtSeq
#--outSAMmapqUnique 40 \
    /shared_lab/scripts/STAR \
    --runThreadN 20 \
    --genomeDir $rsem_ref \
    --readFilesIn $file1 $file2 \
    --outSAMtype BAM Unsorted SortedByCoordinate \
    --quantMode TranscriptomeSAM GeneCounts \
    --outSAMmapqUnique 40 \
    --limitSjdbInsertNsj 1500000 \
    --outFileNamePrefix $outPath \
    --readFilesCommand zcat \
    --sjdbFileChrStartEnd $m2_files # Directory from first pass with splice junctions
done

### RSEM Quantification ###########################################
echo "Starting RSEM...."
for i in ${lst[*]};do
    echo "RSEM .. processing sample: "$i
    outPath=$r_out"/"$i
    filePath=${s_out_m3}"/"${i}
    file1=$(ls $filePath*toTranscriptome.out.bam)

    # --alignments : arguement used to specify that we are supplying aligned bam files
    # --paired-end : paired end reads
    rsem-calculate-expression \
    --alignments \
    --paired-end \
    --output-genome-bam \
    -p 20 \
    $file1 \
    $rsem_ref"/RSEM" \
    $outPath
done